name: Release

on:
  push:
    tags:
      - "v*"
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.event.head_commit.message, 'release') || github.event_name == 'workflow_dispatch' }}

    permissions:
      actions: write
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0
        
      - name: Get previous tag
        id: get_previous_tag
        run: |
          echo "PREV_TAG=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1))">>$GITHUB_ENV
          echo "CURR_TAG=$(git describe --abbrev=0 --tags)">>$GITHUB_ENV

      - name: Generate changelog
        id: generate_changelog
        run: |
          echo "Previous tag: $PREV_TAG"
          echo "Current tag: $CURR_TAG"
          FULL_CHANGELOG="**Full Changelog**: ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/compare/$PREV_TAG...$CURR_TAG"
          COMMITS=$(git log $PREV_TAG..HEAD --pretty=format:"%h %s (%an, %ar)")
          {
            echo 'changelog<<EOF'
            echo -e "$COMMITS\n\n$FULL_CHANGELOG"
            echo EOF
          } >> $GITHUB_OUTPUT

      - name: Use pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest
          run_install: false
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'pnpm'

      - run: pnpm install --frozen-lockfile
      - run: pnpm build

      - name: publish release
        uses: ncipollo/release-action@v1
        with:
          artifacts: ./*.zip
          body: ${{ steps.generate_changelog.outputs.changelog }}
          makeLatest: latest
          token: ${{ secrets.GITHUB_TOKEN }}
